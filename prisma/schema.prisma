generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Books {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  genre       String
  fullName    String
  image       String
  year        Int
  numberPages Int
  publishing  Boolean
  notes       String
  read        Boolean
  buy         Boolean

  Goal         Goals?
  userId       Int
  User         Users      @relation(fields: [userId], references: [id])
  genreId      Int
  Genre        Genres     @relation(fields: [genreId], references: [id])
  authorId     Int
  Author       Authors    @relation(fields: [authorId], references: [id])
  publishingId Int
  Publishing   Publishing @relation(fields: [publishingId], references: [id])
}

model Authors {
  id       Int    @id @default(autoincrement())
  fullName String

  Books Books[]
}

model Users {
  id             Int     @id @default(autoincrement())
  email          String  @unique
  password       String
  isActivated    Boolean @default(false)
  activationLink String
  isAdmin        Boolean @default(false)

  Token Token?
  Books Books[]
  Goals Goals[]
}

model Token {
  id           Int    @id @default(autoincrement())
  refreshToken String

  userId Int   @unique
  User   Users @relation(fields: [userId], references: [id])
}

model Goals {
  id           Int     @id @default(autoincrement())
  title        String
  numberPages  Int
  currentPages Int
  completed    Boolean

  bookId Int   @unique
  Book   Books @relation(fields: [bookId], references: [id])

  userId Int
  User   Users @relation(fields: [userId], references: [id])
}

model Publishing {
  id    Int    @id @default(autoincrement())
  title String

  Books Books[]
}

model Genres {
  id    Int    @id @default(autoincrement())
  title String

  Books Books[]
}
